---
- name: os vars
  include_vars: '{{ ansible_os_family }}.yml'
  tags: apache, vars

- name: compute do_sys
  set_fact:
    do_sys: '{% if "criecm" in ansible_local and "apache" in ansible_local.criecm and
             ansible_local.criecm.apache.version | default(0) | int >= apache_role_version and
             not do_sysadm | default(False) %}no{% else %}yes{% endif %}'
  tags: apache, vars, config

- name: install and enable apache
  include_tasks: '{{ ansible_os_family }}.yml'
  tags: apache, pkg
  when: do_sys

- name: conf standard
  block:
    - name: default confs
      file:
        dest: '{{ apache_etcdir }}/{{ item }}'
        state: directory
        mode: '0755'
      with_items:
        - '{{ apache_modsconfdir }}'
        - '{{ apache_sitesdir }}'
        - '{{ apache_includesdir }}'
      loop_control:
        label: '{{ item }}'

    - name: conf includes
      copy:
        src: '{{ item }}'
        dest: '{{ apache_etcdir }}/{{ apache_includesdir }}/{{ item | basename }}'
        mode: '0644'
      with_flattened:
        - '{{ group_names | union([inventory_hostname,inventory_hostname | regex_replace("[0-9]*$","")]) | unique
          | list | map("regex_replace","^(?P<grp>.*)$","\g<grp>/apache/"+apache_includesdir+"/*.conf")
          | map("fileglob") | reject("equalto",[]) | map("flatten") | list }}'
        - '{{ ["apache/"+apache_includesdir+"/*.conf"] | map("fileglob") | list }}'
      loop_control:
        label: '{{ item }}'

    - name: conf modules
      copy:
        src: '{{ item }}'
        dest: '{{ apache_etcdir }}/{{ apache_modsconfdir }}/{{ item | basename }}'
        mode: '0644'
      with_flattened:
        - '{{ ["apache/"+apache_modsconfdir+"/*.conf"] | map("fileglob") | list }}'
        - '{{ group_names | union([inventory_hostname,inventory_hostname | regex_replace("[0-9]*$","")]) | unique
          | list | map("regex_replace","^(?P<grp>.*)$","\g<grp>/apache/"+apache_modsconfdir+"/*.conf")
          | map("fileglob") | reject("equalto",[]) | map("flatten") | list }}'
      loop_control:
        label: '{{ item }}'
    - name: conf .inc's
      copy:
        src: '{{ item }}'
        dest: '{{ apache_etcdir }}/{{ item | regex_replace(".*/([^/]+)$","\1") }}'
        mode: '0644'
      with_flattened:
        - '{{ group_names | union([inventory_hostname,inventory_hostname | regex_replace("[0-9]*$","")]) | unique
          | list | map("regex_replace","^(?P<grp>.*)$","\g<grp>/apache/*.inc") | map("fileglob")
          | reject("equalto",[]) | map("flatten") | list }}'
        - '{{ ["apache/*.inc"] | map("fileglob") | list }}'
      loop_control:
        label: '{{ item }}'
    - name: conf include sites
      template:
        dest: '{{ apache_etcdir }}/{{ apache_includesdir }}/Zsites.conf'
        src: sites.conf.j2
        mode: '0644'
        force: no
    - name: apache default files
      copy:
        dest: '{{ apache_rootbase }}/default/'
        src: '{{ item }}/'
      with_first_found:
        - '{{ inventory_hostname }}/apache/default_root'
        - '{{ inventory_hostname | regex_replace("[0-9]*$","") }}/apache/default_root'
        - 'apache/default_root'
      loop_control:
        label: '{{ item }}'
  tags: apache, config
  when: do_sys

- name: fact done
  blockinfile:
    path: '{{ etcprefix }}/etc/ansible/facts.d/criecm.fact'
    marker: '# {mark} ANSIBLE criecm.apache BLOCK'
    block: |
      [apache]
      version={{ apache_role_version }}
    create: yes
  when: do_sys

- name: sites
  include_tasks: site.yml
  with_items: '{{ sites }}'
  loop_control:
    loop_var: onesite
  loop: '{% if mysite | length > 0 %}{{ sites | selectattr("id","match",mysite+"$") | list }}{% else %}{{ sites }}{% endif %}'
  tags: apache, sites

- name: start apache
  service:
    name: '{{ apache_service }}'
    state: started
  tags: apache, sites
